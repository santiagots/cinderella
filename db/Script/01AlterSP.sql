/*
Run this script on:

        (local)\SQLEXPRESS.C:\USERS\STAMBOUR\APPDATA\LOCAL\SISTEMACINDERELLADESARROLLO\CINDERELLA_LOCAL.MDF    -  This database will be modified

to synchronize it with:

        (local)\SQLEXPRESS.CINDERELLA_LOCAL

You are recommended to back up your database before running this script

Script created by SQL Compare version 14.2.9.15508 from Red Gate Software Ltd at 7/1/2021 22:17:11

*/
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL Serializable
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Altering [dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO]'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
IF COL_LENGTH(N'[dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO]', N'IdCuentaBancaria') IS NULL
ALTER TABLE [dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO] ADD[IdCuentaBancaria] [int] NULL
IF COL_LENGTH(N'[dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO]', N'NumeroOrdenCheques') IS NULL
ALTER TABLE [dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO] ADD[NumeroOrdenCheques] [varchar] (250) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Creating [dbo].[NUEVA_CUENTABANCARIA]'
GO
IF OBJECT_ID(N'[dbo].[NUEVA_CUENTABANCARIA]', 'U') IS NULL
CREATE TABLE [dbo].[NUEVA_CUENTABANCARIA]
(
[Id] [int] NOT NULL IDENTITY(1, 1),
[IdBanco] [int] NOT NULL,
[CBU] [varchar] (125) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[NumeroCuenta] [varchar] (125) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[CBUAlias] [varchar] (125) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[Titular] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[CUIT] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[EsCuentaCorriente] [bit] NOT NULL,
[Habilitado] [bit] NOT NULL
)
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Creating primary key [PK_NUEVA_CUENTABANCARIA] on [dbo].[NUEVA_CUENTABANCARIA]'
GO
IF NOT EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PK_NUEVA_CUENTABANCARIA]', 'PK') AND parent_object_id = OBJECT_ID(N'[dbo].[NUEVA_CUENTABANCARIA]', 'U'))
ALTER TABLE [dbo].[NUEVA_CUENTABANCARIA] ADD CONSTRAINT [PK_NUEVA_CUENTABANCARIA] PRIMARY KEY CLUSTERED  ([Id])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Altering [dbo].[NUEVA_VENTA_PAGOS]'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
IF COL_LENGTH(N'[dbo].[NUEVA_VENTA_PAGOS]', N'IdCuentaBancaria') IS NULL
ALTER TABLE [dbo].[NUEVA_VENTA_PAGOS] ADD[IdCuentaBancaria] [int] NULL
IF COL_LENGTH(N'[dbo].[NUEVA_VENTA_PAGOS]', N'NumeroOrdenCheques') IS NULL
ALTER TABLE [dbo].[NUEVA_VENTA_PAGOS] ADD[NumeroOrdenCheques] [varchar] (250) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Creating [dbo].[NUEVA_DOCUMENTO_PAGO]'
GO
IF OBJECT_ID(N'[dbo].[NUEVA_DOCUMENTO_PAGO]', 'U') IS NULL
CREATE TABLE [dbo].[NUEVA_DOCUMENTO_PAGO]
(
[Id] [bigint] NOT NULL,
[TipoCliente] [int] NOT NULL,
[IdSucursal] [int] NOT NULL,
[IdEncargado] [int] NOT NULL,
[IdVendedor] [int] NOT NULL,
[IdClienteMayorista] [int] NOT NULL,
[Fecha] [datetime] NOT NULL,
[FechaEdicion] [datetime] NOT NULL,
[PagoMontoTotal] [decimal] (18, 2) NOT NULL,
[PagoDescuentoTotal] [decimal] (18, 2) NOT NULL,
[PagoCFTTotal] [decimal] (18, 2) NOT NULL,
[PagoIVATotal] [decimal] (18, 2) NOT NULL,
[Anulado] [bit] NULL,
[MotivoAnulado] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
[FechaAnulado] [datetime] NULL
)
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Creating primary key [PK_NUEVA_DOCUMENTO_PAGO] on [dbo].[NUEVA_DOCUMENTO_PAGO]'
GO
IF NOT EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PK_NUEVA_DOCUMENTO_PAGO]', 'PK') AND parent_object_id = OBJECT_ID(N'[dbo].[NUEVA_DOCUMENTO_PAGO]', 'U'))
ALTER TABLE [dbo].[NUEVA_DOCUMENTO_PAGO] ADD CONSTRAINT [PK_NUEVA_DOCUMENTO_PAGO] PRIMARY KEY CLUSTERED  ([Id])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Adding foreign keys to [dbo].[NUEVA_CUENTABANCARIA]'
GO
IF NOT EXISTS (SELECT 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_NUEVA_CUENTABANCARIA_BANCOS]','F') AND parent_object_id = OBJECT_ID(N'[dbo].[NUEVA_CUENTABANCARIA]', 'U'))
ALTER TABLE [dbo].[NUEVA_CUENTABANCARIA] WITH NOCHECK  ADD CONSTRAINT [FK_NUEVA_CUENTABANCARIA_BANCOS] FOREIGN KEY ([IdBanco]) REFERENCES [dbo].[BANCOS] ([BancoId])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Adding foreign keys to [dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO]'
GO
IF NOT EXISTS (SELECT 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO_NUEVA_CUENTABANCARIA]','F') AND parent_object_id = OBJECT_ID(N'[dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO]', 'U'))
ALTER TABLE [dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO] ADD CONSTRAINT [FK_NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO_NUEVA_CUENTABANCARIA] FOREIGN KEY ([IdCuentaBancaria]) REFERENCES [dbo].[NUEVA_CUENTABANCARIA] ([Id])
GO
IF NOT EXISTS (SELECT 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO_NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO]','F') AND parent_object_id = OBJECT_ID(N'[dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO]', 'U'))
ALTER TABLE [dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO] ADD CONSTRAINT [FK_NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO_PAGO_NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO] FOREIGN KEY ([IdDocumentoDePago]) REFERENCES [dbo].[NUEVA_CLIENTE_MAYORISTA_DOCUMENTO_PAGO] ([Id])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
PRINT N'Adding foreign keys to [dbo].[NUEVA_VENTA_PAGOS]'
GO
IF NOT EXISTS (SELECT 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_NUEVA_VENTA_PAGOS_NUEVA_CUENTABANCARIA]','F') AND parent_object_id = OBJECT_ID(N'[dbo].[NUEVA_VENTA_PAGOS]', 'U'))
ALTER TABLE [dbo].[NUEVA_VENTA_PAGOS] ADD CONSTRAINT [FK_NUEVA_VENTA_PAGOS_NUEVA_CUENTABANCARIA] FOREIGN KEY ([IdCuentaBancaria]) REFERENCES [dbo].[NUEVA_CUENTABANCARIA] ([Id])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
-- This statement writes to the SQL Server Log so SQL Monitor can show this deployment.
IF HAS_PERMS_BY_NAME(N'sys.xp_logevent', N'OBJECT', N'EXECUTE') = 1
BEGIN
    DECLARE @databaseName AS nvarchar(2048), @eventMessage AS nvarchar(2048)
    SET @databaseName = REPLACE(REPLACE(DB_NAME(), N'\', N'\\'), N'"', N'\"')
    SET @eventMessage = N'Redgate SQL Compare: { "deployment": { "description": "Redgate SQL Compare deployed to ' + @databaseName + N'", "database": "' + @databaseName + N'" }}'
    EXECUTE sys.xp_logevent 55000, @eventMessage
END
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
	IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
	PRINT 'The database update failed'
END
GO
